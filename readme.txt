Θεωρία Πληροφοριών και Κωδίκων
Ιούλιος 2018

Π16036 – Ιωαννίδης Παναγιώτης
Π16097 – Νίκας Διονύσης
Π16112 – Παραβάντης Αθανάσιος

================================================
	Εκφώνηση
================================================

Ομάδα 5: Χρησιμοποιήστε γραμμικό κώδικα και Fano-Shannon

Ο πομπός παίρνει από τον χρήστη σαν είσοδο μία εικόνα, το μήκος του κώδικα
και ότι άλλες παραμέτρους χρειάζεται για να τον δημιουργήσει αλλά και μία τιμή
που καθορίζει την ένταση του θορύβου. Λαμβάνοντας την εικόνα, το πρόγραμμά σας
την μετατρέπει σε ένα διάνυσμα RGB τιμών, τις οποίες θα πρέπει να συμπιέσετε.
Στην συνέχεια, το συμπιεσμένο string το κωδικοποιείτε με τον αντίστοιχο κώδικα
και του προσθέτετε το αντίστοιχο θόρυβο (πχ ένταση 5 σημαίνει ότι αλλάζετε μέχρι 5 bit)
Το αποτέλεσμα είναι ένα string το οποίο το κωδικοποιείτε σε base64 και στέλνετε
στον παραλήπτη ένα json το οποίο περιέχει τις διαστάσεις της εικόνας, το μήκος
του κώδικα (και ότι άλλες παραμέτρους χρειάζεστε) και το κωδικοποιημένο string.
Μόλις ο πομπός αποστείλει το μήνυμά του, εμφανίζει μήνυμα στο χρήστη με στατιστικά:
Αρχικό μέγεθος αρχείου, εντροπιία, τελικό μέγεθος αρχείου και πόσα bits προσθέθηκαν.


================================================
	Περιγραφή
================================================

Η εργασία υλοποιήθηκε στη Python 3.6.5 και πραγματοποιεί ανταλλαγή πληροφοριών
μέσω JSON μεταξύ πελάτη και εξυπηρετητή. Τα στοιχεία αυτά είναι συμπιεσμένα και
κωδικοποιημένα από τη πλευρά του πελάτη, και στη συνέχεια ο εξυπηρετητής
αναλαμβάνει την αποκωδικοποίηση. Ως είσοδο δεδομένων δίνεται μια από τις
τέσσερεις εικόνες και χρησιμοποιείται ο αλγόριθμος Fano Shannon για συμπίεση
και γραμμικός κώδικας για κωδικοποίηση/αποκωδικοποίηση.


================================================
	Δομή
================================================

-	3X3.jpg
-	4X4.jpg
-	5X5.jpg
-	camera.jpg
-	car.jpg
-	client.py
-	server.py
-	classes/fano_shannon.py
-	classes/linear_code.py


================================================
	Εκτέλεση
================================================

- Ανοίγουμε δυο ξεχωριστά terminal
- Κάνουμε `cd` στον φάκελο της εργασίας, όπου βρίσκεται και αυτό το αρχείο
- Στο πρώτο παράθυρο εκκινούμε τον server με `python server.py`
- Στο δεύτερο παράθυρο εκκινούμε τον client με `python client.py`
- Εισάγουμε όλες τις απαραίτητες πληροφορίες στον client
- Αποστέλλονται οι πληροφορίες και λαμβάνουμε αποτέλεσμα από τον εξυπηρετητή
- Ο client και server τερματίζονται αυτόματα στο τέλος της διαδικασίας


================================================
	Βιβλιοθήκες
================================================

numpy, Image , base64, random, json, math, socket, os.
